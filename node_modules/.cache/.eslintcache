[{"D:\\CPFE\\EasyLearn\\src\\index.js":"1","D:\\CPFE\\EasyLearn\\src\\App.js":"2","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Loading.js":"3","D:\\CPFE\\EasyLearn\\src\\Pages\\RootLayout.js":"4","D:\\CPFE\\EasyLearn\\src\\Pages\\Home.js":"5","D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\Navbar.js":"6","D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\Footer.js":"7","D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\ScrollTop.js":"8","D:\\CPFE\\EasyLearn\\src\\Pages\\Auth.js":"9","D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Authenticate.js":"10","D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Login.js":"11","D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Signup.js":"12","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Button.js":"13","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Error.js":"14","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Modal.js":"15","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Card2.js":"16","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Button2.js":"17","D:\\CPFE\\EasyLearn\\src\\store\\index.js":"18","D:\\CPFE\\EasyLearn\\src\\Components\\Form\\Title.js":"19","D:\\CPFE\\EasyLearn\\src\\Components\\Form\\TextField.js":"20","D:\\CPFE\\EasyLearn\\src\\validator\\validator.js":"21","D:\\CPFE\\EasyLearn\\src\\Pages\\MyAnswers.js":"22","D:\\CPFE\\EasyLearn\\src\\Pages\\MyQuestions.js":"23","D:\\CPFE\\EasyLearn\\src\\Data\\ArrayFile.js":"24","D:\\CPFE\\EasyLearn\\src\\Pages\\Tech.js":"25","D:\\CPFE\\EasyLearn\\src\\Data\\TechData.js":"26","D:\\CPFE\\EasyLearn\\src\\Pages\\Topic.js":"27","D:\\CPFE\\EasyLearn\\src\\Data\\TopicData.js":"28","D:\\CPFE\\EasyLearn\\src\\Data\\TopicQA.js":"29","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\VideoPlayer.js":"30","D:\\CPFE\\EasyLearn\\src\\Components\\QuesAns.js":"31","D:\\CPFE\\EasyLearn\\src\\Pages\\Profile.js":"32","D:\\CPFE\\EasyLearn\\src\\Components\\User\\UserProfile.js":"33","D:\\CPFE\\EasyLearn\\src\\Components\\User\\Update.js":"34","D:\\CPFE\\EasyLearn\\src\\util\\auth.js":"35","D:\\CPFE\\EasyLearn\\src\\Pages\\Contact.js":"36","D:\\CPFE\\EasyLearn\\src\\Components\\Answer.js":"37"},{"size":507,"mtime":1681998271975,"results":"38","hashOfConfig":"39"},{"size":2499,"mtime":1683561010850,"results":"40","hashOfConfig":"39"},{"size":237,"mtime":1681232856250,"results":"41","hashOfConfig":"39"},{"size":433,"mtime":1682001789532,"results":"42","hashOfConfig":"39"},{"size":682,"mtime":1682665140007,"results":"43","hashOfConfig":"39"},{"size":6279,"mtime":1682325956376,"results":"44","hashOfConfig":"39"},{"size":7332,"mtime":1684215292461,"results":"45","hashOfConfig":"39"},{"size":872,"mtime":1681983175889,"results":"46","hashOfConfig":"39"},{"size":145,"mtime":1681731030785,"results":"47","hashOfConfig":"39"},{"size":1144,"mtime":1681795429423,"results":"48","hashOfConfig":"39"},{"size":5387,"mtime":1683563998827,"results":"49","hashOfConfig":"39"},{"size":4667,"mtime":1683564005940,"results":"50","hashOfConfig":"39"},{"size":220,"mtime":1678018448742,"results":"51","hashOfConfig":"39"},{"size":160,"mtime":1678276662208,"results":"52","hashOfConfig":"39"},{"size":1159,"mtime":1681797641028,"results":"53","hashOfConfig":"39"},{"size":231,"mtime":1680754336194,"results":"54","hashOfConfig":"39"},{"size":317,"mtime":1680754336194,"results":"55","hashOfConfig":"39"},{"size":2980,"mtime":1681882196708,"results":"56","hashOfConfig":"39"},{"size":160,"mtime":1678079824744,"results":"57","hashOfConfig":"39"},{"size":925,"mtime":1681722590830,"results":"58","hashOfConfig":"39"},{"size":1937,"mtime":1681793707937,"results":"59","hashOfConfig":"39"},{"size":2457,"mtime":1684132109508,"results":"60","hashOfConfig":"39"},{"size":2453,"mtime":1683564638196,"results":"61","hashOfConfig":"39"},{"size":444,"mtime":1682000359030,"results":"62","hashOfConfig":"39"},{"size":1449,"mtime":1683563783767,"results":"63","hashOfConfig":"39"},{"size":993,"mtime":1682002327269,"results":"64","hashOfConfig":"39"},{"size":11487,"mtime":1683563776814,"results":"65","hashOfConfig":"39"},{"size":771,"mtime":1682072339616,"results":"66","hashOfConfig":"39"},{"size":648,"mtime":1682073760084,"results":"67","hashOfConfig":"39"},{"size":364,"mtime":1682255948031,"results":"68","hashOfConfig":"39"},{"size":2551,"mtime":1684124180977,"results":"69","hashOfConfig":"39"},{"size":1879,"mtime":1683563795133,"results":"70","hashOfConfig":"39"},{"size":1419,"mtime":1682414795028,"results":"71","hashOfConfig":"39"},{"size":2899,"mtime":1682414907434,"results":"72","hashOfConfig":"39"},{"size":754,"mtime":1682660867390,"results":"73","hashOfConfig":"39"},{"size":149,"mtime":1682664518290,"results":"74","hashOfConfig":"39"},{"size":2576,"mtime":1683563723830,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nw5pyt",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},"D:\\CPFE\\EasyLearn\\src\\index.js",[],[],"D:\\CPFE\\EasyLearn\\src\\App.js",["204"],[],"import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport RootLayout from \"./Pages/RootLayout\";\nimport Loading from \"./Components/UI/Loading\";\nimport Auth from \"./Pages/Auth\";\nimport MyAnswers from \"./Pages/MyAnswers\";\nimport MyQuestions from \"./Pages/MyQuestions\";\nimport Tech from \"./Pages/Tech\";\nimport Topic from \"./Pages/Topic\";\nimport { useEffect, useState } from \"react\";\nimport { authActions } from \"./store/index\";\nimport { useDispatch } from \"react-redux\";\nimport Profile from \"./Pages/Profile\";\nimport { checkAuthLoader } from \"./util/auth\";\nimport Contact from \"./Pages/Contact\";\n\nfunction App() {\n  const [loading, setloading] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"use effect running\");\n    setloading(true);\n    const token = localStorage.getItem(\"token\");\n    const url2 = \"http://localhost:8080/checklogin\";\n    fetch(\"https://easylearn-mhgq.onrender.com/checklogin\", {\n      method: \"GET\",\n      cache: \"no-store\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        if (data.message === \"Some problem in authentication\") {\n          setloading(false);\n          dispatch(authActions.logout());\n        } else if (data.message === \"Invalid token\") {\n          setloading(false);\n          dispatch(authActions.logout());\n        } else if (data.message === \"User is logged in\") {\n          console.log(\"setting the user role\", data.role);\n          setloading(false);\n          dispatch(authActions.login(data.role));\n        }\n      });\n  }, [dispatch]);\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        { path: \"/\", element: <Home /> },\n        { path: \"/auth\", element: <Auth /> },\n        { path: \"/answers\", element: <MyAnswers />, loader: checkAuthLoader },\n        {\n          path: \"/questions\",\n          element: <MyQuestions />,\n          loader: checkAuthLoader,\n        },\n        { path: \"/technology\", element: <Tech /> },\n        { path: \"/topic\", element: <Topic /> },\n        { path: \"/profile\", element: <Profile />, loader: checkAuthLoader },\n        {\n          path: \"/contact\",\n          element: <Contact />,\n        },\n      ],\n    },\n  ]);\n  return <>{loading ? <Loading /> : <RouterProvider router={router} />}</>;\n}\n\nexport default App;\n","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Loading.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\RootLayout.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\Home.js",["205"],[],"import React from \"react\";\r\nimport classes from \"./Home.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrayFile } from \"../Data/ArrayFile\";\r\n\r\nfunction Home() {\r\n  const techs = ArrayFile.map((tech) => (\r\n    <Link key={tech.title} to={`/technology?tech=${tech.title}`}>\r\n      <img className={classes.img} src={tech.src} />\r\n    </Link>\r\n  ));\r\n  return (\r\n    <div className={classes.home}>\r\n      <p className={classes.fline}>Learn from community with </p>\r\n      <div className={classes.weber}>\r\n        EASY<span className={classes.er}>LEARN</span>\r\n      </div>\r\n      <div className={classes.fr}>{techs}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",[],"D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\Navbar.js",["206"],[],"import classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authActions } from \"../../store/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n  const roles = useSelector((state) => state.auth.role);\r\n  const logouthandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    dispatch(authActions.logout());\r\n    console.log(localStorage.getItem(\"token\"), localStorage.getItem(\"role\"));\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        class=\"navbar navbar-expand-lg navbar-dark sticky-top\"\r\n        style={{\r\n          // background:\r\n          //   \"linear-gradient(104.28deg, rgba(255, 255, 255, 0.1) 13.04%,rgba(255, 255, 255, 0.4) 69.71%)\",\r\n          // boxShadow: \"0px 4px 24px -1px rgba(0, 0, 0, 0.2)\",\r\n          // marginBottom: \"30px\",\r\n          // backdropFilter: \"blur(20px)\",\r\n          backgroundColor: \"black\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      >\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarTogglerDemo01\"\r\n          aria-controls=\"navbarTogglerDemo01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n          <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <span\r\n              className={classes.navlink}\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse.show\"\r\n            >\r\n              <NavLink\r\n                to=\"/\"\r\n                className={({ isActive }) =>\r\n                  isActive ? classes.active : classes.inactive\r\n                }\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </span>\r\n\r\n            <span\r\n              className={classes.navlink}\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse.show\"\r\n            >\r\n              <NavLink\r\n                to=\"/answers\"\r\n                className={({ isActive }) =>\r\n                  isActive ? classes.active : classes.inactive\r\n                }\r\n              >\r\n                Answers\r\n              </NavLink>\r\n            </span>\r\n            <span\r\n              className={classes.navlink}\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse.show\"\r\n            >\r\n              <NavLink\r\n                to=\"/questions\"\r\n                className={({ isActive }) =>\r\n                  isActive ? classes.active : classes.inactive\r\n                }\r\n              >\r\n                Questions\r\n              </NavLink>\r\n            </span>\r\n          </ul>\r\n          <ul class=\"navbar-nav mt-2 mt-lg-0\">\r\n            {/* <span\r\n              className={classes.navlink}\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse.show\"\r\n            >\r\n              <NavLink\r\n                to=\"/cart\"\r\n                className={({ isActive }) =>\r\n                  isActive ? classes.active : classes.inactive\r\n                }\r\n              >\r\n                <ion-icon\r\n                  style={{\r\n                    \"font-size\": \"25px\",\r\n                    \"margin-right\": \"20px\",\r\n                    \"font-weight\": \"bold\",\r\n                  }}\r\n                  name=\"cart-outline\"\r\n                ></ion-icon>\r\n              </NavLink>\r\n            </span> */}\r\n            {!loggedIn && (\r\n              <span\r\n                className={classes.navlink}\r\n                data-toggle=\"collapse\"\r\n                data-target=\".navbar-collapse.show\"\r\n              >\r\n                <NavLink\r\n                  to=\"/auth\"\r\n                  className={({ isActive }) =>\r\n                    isActive ? classes.active : classes.inactive\r\n                  }\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </span>\r\n            )}\r\n          </ul>\r\n          {loggedIn && (\r\n            <div class=\"dropdown\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <ion-icon name=\"person\"></ion-icon>\r\n              </button>\r\n              <div\r\n                className={`dropdown-menu ${classes.drop}`}\r\n                aria-labelledby=\"dropdownMenu2\"\r\n              >\r\n                {/* <button\r\n                  class=\"dropdown-item\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\".navbar-collapse.show\"\r\n                > */}\r\n                <NavLink\r\n                  to=\"/profile\"\r\n                  className={({ isActive }) =>\r\n                    isActive ? classes.act : classes.inact\r\n                  }\r\n                >\r\n                  My Profile\r\n                </NavLink>\r\n                {/* </button> */}\r\n                {/* <button\r\n                  className={`dropdown-item ${classes.inactivedrop}`}\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\".navbar-collapse.show\"\r\n                > */}\r\n                {/* </button> */}\r\n                <button\r\n                  class=\"dropdown-item\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\".navbar-collapse.show\"\r\n                >\r\n                  {loggedIn && (\r\n                    <button\r\n                      class=\"dropdown-item text-start\"\r\n                      onClick={logouthandler}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\Footer.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\Layout\\ScrollTop.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\Auth.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Authenticate.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Login.js",["207","208","209"],[],"import Title from \"../Form/Title\";\r\nimport Error from \"../UI/Error\";\r\nimport TextField from \"../Form/TextField\";\r\nimport Button from \"../UI/Button\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport validatefield from \"../../validator/validator\";\r\nimport { authActions } from \"../../store/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nfunction Login(props) {\r\n  const [searchParams] = useSearchParams();\r\n  const dispatch = useDispatch();\r\n  const [email, setemail] = useState(\"\");\r\n  const [emailValid, setemailValid] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [passwordValid, setpasswordValid] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [showforget, setshowforget] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"Login\");\r\n  const [alternateOption, setalternateOption] = useState(\"Forget Password\");\r\n  const [showModal, setshowModal] = useState(false);\r\n\r\n  const onEmailChangeHandler = (event) => {\r\n    setemail(event.target.value);\r\n    setemailValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          maxLength: 50,\r\n          email: true,\r\n        },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onPasswordChangeHandler = (event) => {\r\n    setpassword(event.target.value);\r\n    setpasswordValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          password: true,\r\n        },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const formValidate = () => {\r\n    setemailValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          maxLength: 50,\r\n          email: true,\r\n        },\r\n        email\r\n      )\r\n    );\r\n    setpasswordValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          password: true,\r\n        },\r\n        password\r\n      )\r\n    );\r\n    if (emailValid !== \"valid\" || passwordValid !== \"valid\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onFormToggle = () => {\r\n    if (formTitle === \"Login\") {\r\n      setFormTitle(\"Enter email\");\r\n      setalternateOption(\"Login\");\r\n      setshowforget(true);\r\n    } else {\r\n      setFormTitle(\"Login\");\r\n      setalternateOption(\"Forget password\");\r\n      setshowforget(false);\r\n    }\r\n  };\r\n\r\n  const onSubmitEmail = () => {\r\n    props.setloading(true);\r\n    fetch(\"https://ecommerceio.onrender.com/resetPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        props.setloading(false);\r\n        console.log(data);\r\n        setshowModal(true);\r\n      })\r\n      .catch((err) => {\r\n        props.setloading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setshowModal(false);\r\n    setFormTitle(\"Login\");\r\n    setalternateOption(\"Forget password\");\r\n    setshowforget(false);\r\n  };\r\n\r\n  const onSubmitLogin = () => {\r\n    props.setloading(true);\r\n    if (!formValidate()) {\r\n      setError(\"Invalid fields\");\r\n      props.setloading(false);\r\n      return;\r\n    }\r\n    console.log(email, password);\r\n    fetch(\"https://easylearn-mhgq.onrender.com/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.message === \"Login successful\") {\r\n          localStorage.setItem(\"token\", data.token);\r\n          localStorage.setItem(\"role\", data.role);\r\n          dispatch(authActions.login(data.role));\r\n          props.setloading(false);\r\n          const redirectTo = searchParams.get(\"redirectTo\");\r\n          navigate(redirectTo == null ? \"/\" : redirectTo);\r\n        } else {\r\n          props.setloading(false);\r\n          setError(data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        props.setloading(false);\r\n        setError(\"Request Failed\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Title title={formTitle} />\r\n      {error && <Error title={error} />}\r\n      <TextField\r\n        label=\"Email\"\r\n        onChange={onEmailChangeHandler}\r\n        req={true}\r\n        valid={emailValid}\r\n        icon=\"mail-outline\"\r\n        value={email}\r\n      />\r\n      {!showforget && (\r\n        <TextField\r\n          label=\"Password\"\r\n          onChange={onPasswordChangeHandler}\r\n          req={true}\r\n          valid={passwordValid}\r\n          icon=\"lock-closed-outline\"\r\n          type=\"password\"\r\n          value={password}\r\n        />\r\n      )}\r\n      <Button onClick={onSubmitLogin} title=\"Login\" />\r\n      {/* {showforget && <Button onClick={onSubmitEmail} title=\"Submit Email\" />} */}\r\n      {/* <Button onClick={onFormToggle} title={alternateOption} /> */}\r\n\r\n      {showModal && (\r\n        <Modal\r\n          title=\"Email Sent!\"\r\n          message=\"Check your email to reset password\"\r\n          onClick={onClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\Authenticate\\Signup.js",["210","211","212","213"],[],"import Title from \"../Form/Title\";\r\nimport TextField from \"../Form/TextField\";\r\nimport Button from \"../UI/Button\";\r\nimport { useState } from \"react\";\r\nimport Error from \"../UI/Error\";\r\nimport validatefield from \"../../validator/validator\";\r\n\r\nfunction Signup(props) {\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const [passwordValid, setpasswordValid] = useState(\"\");\r\n  const [confirmpasswordValid, setconfirmpasswordValid] = useState(\"\");\r\n  const [emailValid, setemailValid] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [usernameValid, setusernameValid] = useState(\"\");\r\n  const [addressValid, setaddressValid] = useState(\"\");\r\n\r\n  const onUserNameChangeHandler = (event) => {\r\n    setusername(event.target.value);\r\n    setusernameValid(\r\n      validatefield(\r\n        { minLength: 5, maxLength: 15, required: true },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onEmailChangeHandler = (event) => {\r\n    setemail(event.target.value);\r\n    setemailValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          maxLength: 50,\r\n          email: true,\r\n        },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onPasswordChangeHandler = (event) => {\r\n    setpassword(event.target.value);\r\n    setpasswordValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          password: true,\r\n        },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onConfirmPasswordChangeHandler = (event) => {\r\n    setconfirmpassword(event.target.value);\r\n    setconfirmpasswordValid(\r\n      validatefield({ required: true, matchWith: password }, event.target.value)\r\n    );\r\n  };\r\n  const formValidate = () => {\r\n    setusernameValid(\r\n      validatefield({ minLength: 5, maxLength: 15, required: true }, username)\r\n    );\r\n    setemailValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          maxLength: 50,\r\n          email: true,\r\n        },\r\n        email\r\n      )\r\n    );\r\n    setpasswordValid(\r\n      validatefield(\r\n        {\r\n          required: true,\r\n          password: true,\r\n        },\r\n        password\r\n      )\r\n    );\r\n    setconfirmpasswordValid(\r\n      validatefield({ required: true, matchWith: password }, confirmpassword)\r\n    );\r\n    if (\r\n      emailValid !== \"valid\" ||\r\n      passwordValid !== \"valid\" ||\r\n      usernameValid !== \"valid\" ||\r\n      confirmpasswordValid !== \"valid\"\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const onSubmitSignup = () => {\r\n    props.setloading(true);\r\n    if (!formValidate()) {\r\n      props.setloading(false);\r\n      setError(\"Invalid value(s)\");\r\n      return;\r\n    }\r\n    console.log(email, password, username, confirmpassword);\r\n    fetch(\"https://easylearn-mhgq.onrender.com/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        username: username,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.message === \"User signed up\") {\r\n          props.setloading(false);\r\n          props.toggle();\r\n        } else {\r\n          props.setloading(false);\r\n          setError(data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        props.setloading(false);\r\n        console.log(err);\r\n        setError(\"Request Failed\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Title title=\"Sign up\" />\r\n      {error && <Error title={error} />}\r\n      <TextField\r\n        label=\"Username\"\r\n        onChange={onUserNameChangeHandler}\r\n        req={true}\r\n        valid={usernameValid}\r\n        icon=\"person-outline\"\r\n      />\r\n      <TextField\r\n        label=\"Email\"\r\n        onChange={onEmailChangeHandler}\r\n        req={true}\r\n        valid={emailValid}\r\n        icon=\"mail-outline\"\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        onChange={onPasswordChangeHandler}\r\n        req={true}\r\n        valid={passwordValid}\r\n        icon=\"lock-closed-outline\"\r\n        type=\"password\"\r\n      />\r\n      <TextField\r\n        label=\"Confirm Password\"\r\n        onChange={onConfirmPasswordChangeHandler}\r\n        req={true}\r\n        valid={confirmpasswordValid}\r\n        icon=\"lock-closed-outline\"\r\n        type=\"password\"\r\n      />\r\n      <Button onClick={onSubmitSignup} title=\"Sign up\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Button.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Error.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Modal.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Card2.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\UI\\Button2.js",[],[],"D:\\CPFE\\EasyLearn\\src\\store\\index.js",["214"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\nconst initialAuthState = { loggedIn: false, role: null };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.loggedIn = true;\r\n      state.role = action.payload;\r\n    },\r\n    logout(state, action) {\r\n      state.loggedIn = false;\r\n      // state.role = action.payload;\r\n      state.role = null;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialCartState = {\r\n  cartList: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      console.log(action.payload);\r\n      const id = Object.keys(action.payload)[0];\r\n      let flag = 1;\r\n      // console.log(\"after flag\", );\r\n      const newarr = [...state.cartList];\r\n      for (let a = 0; a < state.cartList.length; a++) {\r\n        if (id === Object.keys(state.cartList[a])[0]) {\r\n          console.log(\"Addddddddddddddddddddddddddd\");\r\n          newarr[a][Object.keys(newarr[a])[0]] += 1;\r\n          console.log(\"new arr updated\", newarr, Object.values(newarr[a])[0]);\r\n          state.cartList = newarr;\r\n          flag = 0;\r\n        }\r\n      }\r\n      if (flag) {\r\n        state.cartList = [...state.cartList, action.payload];\r\n      }\r\n\r\n      console.log(\"in add to cart\", state.cartList);\r\n    },\r\n    removefromcart(state, action) {\r\n      console.log(action.payload);\r\n      const id = Object.keys(action.payload)[0];\r\n      console.log(\"iddddddddddddddddd\", id);\r\n      const newarr = [...state.cartList];\r\n      let flag = 1;\r\n      for (let a = 0; a < state.cartList.length; a++) {\r\n        if (id === Object.keys(state.cartList[a])[0]) {\r\n          console.log(\"here\");\r\n          if (Object.values(state.cartList[a])[0] === 1) {\r\n            const firsthalf = newarr.slice(0, a);\r\n            const secondhalf = newarr.slice(a + 1, newarr.length);\r\n            state.cartList = [...firsthalf, ...secondhalf];\r\n            return;\r\n          } else {\r\n            console.log(\"Removeeeeeeeeee\");\r\n            newarr[a][Object.keys(newarr[a])[0]] -= 1;\r\n            console.log(\"new arr updated\", newarr, Object.values(newarr[a])[0]);\r\n            state.cartList = newarr;\r\n            flag = 0;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    removeCart(state) {\r\n      state.cartList = [];\r\n    },\r\n  },\r\n});\r\nconst reducer = combineReducers({\r\n  cart: cartSlice.reducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, cart: persistedReducer },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport const cartActions = cartSlice.actions;\r\nexport default store;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\Form\\Title.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\Form\\TextField.js",[],[],"D:\\CPFE\\EasyLearn\\src\\validator\\validator.js",[],["215","216","217"],"D:\\CPFE\\EasyLearn\\src\\Pages\\MyAnswers.js",["218","219","220","221","222","223","224","225"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Answer from \"../Components/Answer\";\r\nimport classes from \"./MyAnswers.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loading from \"../Components/UI/Loading\";\r\n\r\nfunction MyAnswers() {\r\n  const [qas, setqas] = useState([]);\r\n  const [qa, setqa] = useState([]);\r\n  const [up, setup] = useState(0);\r\n  const [down, setdown] = useState(0);\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n  const navigate = useNavigate();\r\n  const [loading, setloading] = useState(true);\r\n\r\n  //fetch answers and send as props\r\n  useEffect(() => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    const token = localStorage.getItem(\"token\");\r\n    //https://easylearn-mhgq.onrender.com/allQuestions\r\n    const u = \"https://easylearn-mhgq.onrender.com/allAnswers\";\r\n    fetch(\"https://easylearn-mhgq.onrender.com/allAnswers\", {\r\n      method: \"GET\",\r\n      cache: \"no-store\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setqas(data.answers);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    setqa(\r\n      qas.map((qa) => {\r\n        return (\r\n          <div>\r\n            <p className={classes.ques}>\r\n              <p className={classes.author}>\r\n                {qa.author !== null ? qa.author : \"Anonymous\"}\r\n              </p>\r\n              {qa.question}\r\n            </p>\r\n            <p className={classes.ans}>\r\n              {qa.answer}\r\n              <span className={classes.dislike}>\r\n                <ion-icon name=\"thumbs-down\"></ion-icon>\r\n                {qa.downvotes}\r\n              </span>\r\n              <span className={classes.like}>\r\n                {qa.upvotes}\r\n                <ion-icon name=\"thumbs-up\"></ion-icon>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  }, [qas]);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <div>\r\n          <h2 className={classes.qas}>My Answers</h2>\r\n          <hr></hr>\r\n\r\n          <p>\r\n            {qa}\r\n            {qa.length === 0 && <p>No answers yet.</p>}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyAnswers;\r\n",[],"D:\\CPFE\\EasyLearn\\src\\Pages\\MyQuestions.js",["226","227"],[],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./MyQuestions.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loading from \"../Components/UI/Loading\";\r\n\r\nfunction MyQuestions() {\r\n  //fetch answers and send as props\r\n  const [qas, setqas] = useState([]);\r\n  const [qa, setqa] = useState([]);\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n  const navigate = useNavigate();\r\n  const [loading, setloading] = useState(true);\r\n  //fetch answers and send as props\r\n  useEffect(() => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(\"https://easylearn-mhgq.onrender.com/allQuestions\", {\r\n      method: \"GET\",\r\n      cache: \"no-store\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data.qalist);\r\n        setqas(data.qalist);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    setqa(\r\n      qas.map((qa) => {\r\n        return (\r\n          <div>\r\n            <p className={classes.ques}>{qa.question}</p>\r\n            <p className={classes.ans}>\r\n              {qa.answers &&\r\n                qa.answers.map((ans) => {\r\n                  console.log(\r\n                    qa.answers,\r\n                    \"hgggggggggggggggggggggggggggggggggggggggg\"\r\n                  );\r\n                  return (\r\n                    <p>\r\n                      <div>\r\n                        <p className={classes.author}> {ans.answerAuthor}</p>\r\n                        <p>{ans.answer}</p>\r\n                        <hr />\r\n                      </div>\r\n                    </p>\r\n                  );\r\n                })}\r\n            </p>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  }, [qas]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <div>\r\n          {console.log(qa)}\r\n          {qa.length === 0 && <p className={classes.qas}>No questions yet</p>}\r\n          {!(qa.length === 0) && (\r\n            <div>\r\n              <h2 className={classes.qas}>My Questions</h2>\r\n              <p>{qa}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyQuestions;\r\n","D:\\CPFE\\EasyLearn\\src\\Data\\ArrayFile.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\Tech.js",["228","229","230","231","232","233"],[],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Tech.module.css\";\r\nimport { useParams, Link, useSearchParams } from \"react-router-dom\";\r\nimport { TechData } from \"../Data/TechData\";\r\n\r\nfunction Tech() {\r\n  const [subtopics, setSubtopics] = useState([]);\r\n  const [filter, setfilter] = useSearchParams();\r\n  const params = [];\r\n  for (let entry of filter.entries()) {\r\n    params.push(entry);\r\n  }\r\n  function checktitle(obj) {\r\n    return obj.title == Object.fromEntries([...filter])[\"tech\"];\r\n  }\r\n\r\n  // const tech = TechData.filter(checktitle);\r\n  // console.log(\"tech\", tech);\r\n  // let col = tech[0].color;\r\n\r\n  useEffect(() => {\r\n    const url =\r\n      \"https://easylearn-mhgq.onrender.com/subtopics/\" +\r\n      Object.fromEntries([...filter])[\"tech\"];\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setSubtopics(data.subtopics);\r\n      });\r\n  }, []);\r\n\r\n  const techs = subtopics.map((t) => (\r\n    <Link\r\n      to={\r\n        \"/topic?tech=\" + Object.fromEntries([...filter])[\"tech\"] + \"&topic=\" + t\r\n      }\r\n      className={classes.link}\r\n    >\r\n      <p className={classes.top} key={t}>\r\n        <div>{t}</div>\r\n      </p>\r\n    </Link>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.h}>{params.title}</div>\r\n      <div className={classes.tech}>{techs}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tech;\r\n","D:\\CPFE\\EasyLearn\\src\\Data\\TechData.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\Topic.js",["234","235","236","237","238","239","240","241","242"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport classes from \"./Topic.module.css\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { TopicData } from \"../Data/TopicData\";\r\nimport { TopicQA } from \"../Data/TopicQA\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { materialOceanic } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport VideoPlayer from \"../Components/UI/VideoPlayer\";\r\nimport Loading from \"../Components/UI/Loading\";\r\nimport QuesAns from \"../Components/QuesAns\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Topic() {\r\n  const navigate = useNavigate();\r\n  const [filter, setfilter] = useSearchParams();\r\n  const [subtopicData, setsubtopicData] = useState({});\r\n  const [qas, setqas] = useState();\r\n  const [subtopicId, setsubtopicId] = useState();\r\n  const [doubt, setdoubt] = useState();\r\n  const [doubtform, showdoubtform] = useState(false);\r\n  const [v, setv] = useState();\r\n  const [videoform, showvideoform] = useState(false);\r\n  const [loading, setloading] = useState(true);\r\n  const [questions, setquestions] = useState([]);\r\n  const [videos, setvideos] = useState([]);\r\n  const [currvideo, setcurrvideo] = useState(\"\");\r\n  const [last, setlast] = useState();\r\n  const [page, setpage] = useState(1);\r\n  const [count, setCount] = useState();\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n\r\n  const params = [];\r\n  for (let entry of filter.entries()) {\r\n    params.push(entry);\r\n  }\r\n  // dpw9EHDh2bM\r\n  useEffect(() => {\r\n    const url =\r\n      \"https://easylearn-mhgq.onrender.com/subtopicData/\" +\r\n      Object.fromEntries([...filter])[\"tech\"] +\r\n      \"/\" +\r\n      Object.fromEntries([...filter])[\"topic\"];\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setsubtopicData(data.subtopicData);\r\n        setquestions(data.subtopicData.questions);\r\n        setvideos(data.subtopicData.videos);\r\n        data.subtopicData.videos.length !== 0 &&\r\n          setcurrvideo(data.subtopicData.videos[0].url);\r\n        setCount(data.subtopicData.videos.length);\r\n        setlast(data.subtopicData.videos.length);\r\n        setsubtopicId(data.subtopicData._id);\r\n        setloading(false);\r\n      });\r\n  }, [loading]);\r\n  const showanswerformHandler = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let answers = questions.map((qa) => (\r\n      //  console.log(Object.keys(qa)[0],Object.values(qa)[0]);\r\n      <QuesAns\r\n        qa={qa}\r\n        setquestions={setquestions}\r\n        questionId={qa._id}\r\n        subtopicId={subtopicId}\r\n      />\r\n    ));\r\n    setqas(answers);\r\n  }, [questions]);\r\n  const doubtChangeHandler = (e) => {\r\n    setdoubt(e.target.value);\r\n  };\r\n  const videoChangeHandler = (e) => {\r\n    setv(e.target.value);\r\n  };\r\n\r\n  const showdoubtformHandler = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    showdoubtform(!doubtform);\r\n  };\r\n  const showvideoformHandler = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    showvideoform(!videoform);\r\n  };\r\n  const ondoubtSubmitHandler = () => {\r\n    if (!loggedIn) {\r\n      document.documentElement.scrollTop = 0;\r\n      navigate(\"/auth\");\r\n      return;\r\n    }\r\n    setloading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(\"https://easylearn-mhgq.onrender.com/addQuestion\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        technology: Object.fromEntries([...filter])[\"tech\"],\r\n        subtopic: Object.fromEntries([...filter])[\"topic\"],\r\n        question: doubt,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setquestions(data.subtopic);\r\n        showdoubtform(false);\r\n        setloading(false);\r\n      });\r\n  };\r\n  const onvideoSubmitHandler = () => {\r\n    if (!loggedIn) {\r\n      document.documentElement.scrollTop = 0;\r\n      navigate(\"/auth\");\r\n      return;\r\n    }\r\n    setloading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(\"https://easylearn-mhgq.onrender.com/addVideo\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        technology: Object.fromEntries([...filter])[\"tech\"],\r\n        subtopic: Object.fromEntries([...filter])[\"topic\"],\r\n        video: v,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        showvideoform(false);\r\n        setloading(false);\r\n      });\r\n  };\r\n  const onNext = () => {\r\n    setpage((page) => page + 1);\r\n  };\r\n  const onPrev = () => {\r\n    setpage((page) => page - 1);\r\n  };\r\n  const onFirst = () => {\r\n    setpage(1);\r\n  };\r\n  const onLast = () => {\r\n    setpage(last);\r\n  };\r\n  useEffect(() => {\r\n    // console.log(videos[page - 1].url);\r\n    videos.length !== 0 && setcurrvideo(videos[page - 1].url);\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <>\r\n          <Loading />\r\n        </>\r\n      )}\r\n      {!loading && (\r\n        <div>\r\n          <div className={classes.d}>\r\n            <div className={classes.topic}>{subtopicData.name}</div>\r\n            <p className={classes.desc}>{subtopicData.description}</p>\r\n            <div className=\"container\">\r\n              {videos.length !== 0 ? (\r\n                <div className={classes.player}>\r\n                  <VideoPlayer videoId={currvideo} />\r\n                  {count > 1 && (\r\n                    <nav aria-label=\"Page navigation example\">\r\n                      <ul\r\n                        class=\"pagination\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                      >\r\n                        {page !== 1 && page - 1 > 0 && (\r\n                          <li class=\"page-item\" onClick={onPrev}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              Prev\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {page !== 1 && (\r\n                          <li class=\"page-item\" onClick={onFirst}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              1\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {page !== 2 && page !== 1 && page - 1 !== 2 && (\r\n                          <li class=\"page-item\">\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              ...\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {page - 1 !== 1 && page - 1 > 0 && (\r\n                          <li class=\"page-item\" onClick={onPrev}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              {page - 1}\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n\r\n                        <li class=\"page-item\">\r\n                          <span\r\n                            class=\"page-link\"\r\n                            href=\"#\"\r\n                            style={{\r\n                              color: \"black\",\r\n                              border: \"2px solid orange\",\r\n                            }}\r\n                          >\r\n                            {page}\r\n                          </span>\r\n                        </li>\r\n\r\n                        {page + 1 < last && (\r\n                          <li class=\"page-item\" onClick={onNext}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              {page + 1}\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {page !== last - 1 &&\r\n                          page !== last &&\r\n                          page + 1 !== last - 1 && (\r\n                            <li class=\"page-item\">\r\n                              <span class=\"page-link\" href=\"#\">\r\n                                ...\r\n                              </span>\r\n                            </li>\r\n                          )}\r\n                        {page !== last && (\r\n                          <li class=\"page-item\" onClick={onLast}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              {last}\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                        {page + 1 <= last && (\r\n                          <li class=\"page-item\" onClick={onNext}>\r\n                            <span class=\"page-link\" href=\"#\">\r\n                              Next\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                      </ul>\r\n                    </nav>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  No videos available for this topic\r\n                </p>\r\n              )}\r\n              <button className={classes.doubt} onClick={showvideoformHandler}>\r\n                Add a video\r\n              </button>\r\n              {videoform && (\r\n                <div>\r\n                  <input\r\n                    className={classes.doubttext}\r\n                    placeholder=\"Type your youtube video id here\"\r\n                    onChange={videoChangeHandler}\r\n                  ></input>\r\n                  <button\r\n                    className={classes.submit}\r\n                    onClick={onvideoSubmitHandler}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <p className={classes.code}>\r\n              <SyntaxHighlighter language=\"jsx\" style={materialOceanic}>\r\n                {subtopicData.codeSample}\r\n              </SyntaxHighlighter>\r\n            </p>\r\n          </div>\r\n          <div className={classes.d}>\r\n            <div className={classes.topic}>Discussions</div>\r\n\r\n            <hr />\r\n\r\n            <div> {qas}</div>\r\n            <div className={classes.doubtform}>\r\n              <button className={classes.doubt} onClick={showdoubtformHandler}>\r\n                Ask a doubt\r\n              </button>\r\n              {doubtform && (\r\n                <div>\r\n                  <input\r\n                    className={classes.doubttext}\r\n                    placeholder=\"Type your question here\"\r\n                    onChange={doubtChangeHandler}\r\n                  ></input>\r\n                  <button\r\n                    className={classes.submit}\r\n                    onClick={ondoubtSubmitHandler}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Topic;\r\n","D:\\CPFE\\EasyLearn\\src\\Data\\TopicData.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Data\\TopicQA.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\UI\\VideoPlayer.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\QuesAns.js",["243","244"],[],"import classes from \"./QuesAns.module.css\";\r\nimport { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction QuesAns(props) {\r\n  const navigate = useNavigate();\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n  const [answerform, showanswerform] = useState(false);\r\n  const showanswerformHandler = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    showanswerform(!answerform);\r\n  };\r\n  const [answer, setanswer] = useState(\"\");\r\n  const onAnswerChangeHandler = (e) => {\r\n    setanswer(e.target.value);\r\n  };\r\n  const onSubmitAnswerHandler = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const url2 = \"http://localhost:8080/addAnswer\";\r\n    const url1 = \"https://easylearn-mhgq.onrender.com/addAnswer\"\r\n    fetch(url1, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        questionId: props.questionId,\r\n        answer: answer,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.setquestions(data.questions);\r\n        showanswerform(false);\r\n      });\r\n  };\r\n  return (\r\n    <p>\r\n      {console.log(props.qa._id)}\r\n      <p className={classes.question}>\r\n        {console.log(\"qa\", props.qa)}\r\n        <p className={classes.author}>\r\n          {props.qa.userId !== null ? props.qa.userId.username : \"Anonymous\"}\r\n        </p>\r\n        {props.qa.question}\r\n        <button\r\n          onClick={showanswerformHandler}\r\n          className={classes.answerbutton}\r\n        >\r\n          Answer\r\n        </button>\r\n        {answerform && (\r\n          <div>\r\n            <input\r\n              className={classes.doubttext}\r\n              placeholder=\"Type your answer here\"\r\n              onChange={onAnswerChangeHandler}\r\n            ></input>\r\n            <button className={classes.submit} onClick={onSubmitAnswerHandler}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n        {/* <Overl className={classes.overl} message={\"Add answer\"} /> */}\r\n      </p>\r\n      {props.qa.answers.map((ans) => (\r\n        <Answer\r\n          ans={ans}\r\n          subtopicId={props.subtopicId}\r\n          questionId={props.qa._id}\r\n        />\r\n      ))}\r\n      <hr />\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default QuesAns;\r\n","D:\\CPFE\\EasyLearn\\src\\Pages\\Profile.js",["245","246","247","248","249","250","251","252"],[],"import UserProfile from \"../Components/User/UserProfile\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"../Components/UI/Button\";\r\nimport { authActions } from \"../store/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../Components/UI/Modal\";\r\nimport Update from \"../Components/User/Update\";\r\nimport Loading from \"../Components/UI/Loading\";\r\n\r\nfunction Profile() {\r\n  const dispatch = useDispatch();\r\n  const [showModal, setshowModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [userprofile, setuserprofile] = useState({});\r\n  const [showform, setshowform] = useState(false);\r\n  const [loading, setloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    if (showform === false) {\r\n      fetch(\"https://easylearn-mhgq.onrender.com/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setuserprofile(data.user);\r\n          setloading(false);\r\n        });\r\n    } else {\r\n      setloading(false);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      <div style={{ width: \"70%\", margin: \"auto\" }}>\r\n        {!showform && <UserProfile userprofile={userprofile} />}\r\n        {showform && (\r\n          <Update\r\n            setloading={setloading}\r\n            setuserprofile={setuserprofile}\r\n            setshowform={setshowform}\r\n            userprofile={userprofile}\r\n          />\r\n        )}\r\n        <Button\r\n          title={showform ? \"Show profile\" : \"Update\"}\r\n          onClick={() => setshowform(!showform)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\User\\UserProfile.js",["253","254","255","256","257","258","259"],[],"import { useEffect, useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from \"./UserProfile.module.css\";\r\n// import { authActions } from \"../../store/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction UserProfile(props) {\r\n  const dispatch = useDispatch();\r\n  const [showModal, setshowModal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const confirmation = () => {\r\n    setshowModal(true);\r\n  };\r\n  return (\r\n    <>\r\n      {\r\n        <div className={classes.data}>\r\n          <div className={classes.box}>\r\n            <div className={classes.imageicon}>\r\n              <ion-icon name=\"person-circle-outline\"></ion-icon>\r\n            </div>\r\n            <div className={`row ${classes.field}`}>\r\n              <div className={`col-md-5 col-12 ${classes.key}`}>Email</div>\r\n              <div className={`col-md-5 col-12 ${classes.key}`}>\r\n                {props.userprofile.email}\r\n              </div>\r\n            </div>\r\n            <div className={`row ${classes.field}`}>\r\n              <div className={`col-md-5 col-12 ${classes.key}`}>Username</div>\r\n              <div className={`col-md-5 col-12 ${classes.key}`}>\r\n                {props.userprofile.username}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","D:\\CPFE\\EasyLearn\\src\\Components\\User\\Update.js",["260","261","262","263"],[],"import Title from \"../Form/Title\";\r\nimport TextField from \"../Form/TextField\";\r\nimport Error from \"../UI/Error\";\r\nimport validatefield from \"../../validator/validator\";\r\nimport Button from \"../UI/Button\";\r\nimport { useState } from \"react\";\r\nimport classes from \"./Update.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Update(props) {\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [username, setusername] = useState(props.userprofile.username);\r\n  const [usernameValid, setusernameValid] = useState(\"\");\r\n  const onUserNameChangeHandler = (event) => {\r\n    setusername(event.target.value);\r\n    setusernameValid(\r\n      validatefield(\r\n        { minLength: 5, maxLength: 15, required: true },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const [addressValid, setaddressValid] = useState(\"\");\r\n  const [address, setaddress] = useState(props.userprofile.address);\r\n  const onAddressChangeHandler = (event) => {\r\n    setaddress(event.target.value);\r\n    setaddressValid(\r\n      validatefield(\r\n        { minLength: 6, maxLength: 30, required: true },\r\n        event.target.value\r\n      )\r\n    );\r\n  };\r\n  const onUpdate = () => {\r\n    props.setloading(true);\r\n    const token = localStorage.getItem(\"token\");\r\n    const url2 = \"http://localhost:8080/updateProfile\";\r\n    const url1 = \"https://ecommerceio.onrender.com/updateProfile\";\r\n    fetch(url1, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // console.log(\"57\", data.result);\r\n        if (data.message === \"User profile updated\") {\r\n          setshowModal(true);\r\n          props.setloading(false);\r\n          props.setshowform(false);\r\n          props.setuserprofile(data.result);\r\n        } else {\r\n          props.setloading(false);\r\n          setError(\"Update Failed\");\r\n        }\r\n      });\r\n  };\r\n  const onClose = () => {\r\n    setshowModal(false);\r\n    navigate(\"/profile\");\r\n  };\r\n  const title = \"Update user \";\r\n  return (\r\n    <>\r\n      <section className={classes.box}>\r\n        <Title title={title} />\r\n\r\n        {error && <Error title={error} />}\r\n        <TextField\r\n          label=\"Username\"\r\n          onChange={onUserNameChangeHandler}\r\n          req={true}\r\n          valid={usernameValid}\r\n          icon=\"person-outline\"\r\n          value={username}\r\n        />\r\n        <Button title=\"Update\" onClick={onUpdate} />\r\n      </section>\r\n      {showModal && (\r\n        <Modal title=\"Success!\" message=\"Profile Updated\" onClick={onClose} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","D:\\CPFE\\EasyLearn\\src\\util\\auth.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Pages\\Contact.js",[],[],"D:\\CPFE\\EasyLearn\\src\\Components\\Answer.js",["264"],[],"import classes from \"./Answer.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Answer(props) {\r\n  const navigate = useNavigate();\r\n  const [up, setup] = useState(props.ans.upvotes);\r\n  const [down, setdown] = useState(props.ans.downvotes);\r\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\r\n  console.log(props.ans._id);\r\n  const like = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(\"https://easylearn-mhgq.onrender.com/vote\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        subtopicId: props.subtopicId,\r\n        answerId: props.ans._id,\r\n        questionId: props.questionId,\r\n        upvote: true,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.message === \"vote done\") {\r\n          setup(data.upvotes);\r\n          setdown(data.downvotes);\r\n        }\r\n      });\r\n  };\r\n  const dislike = () => {\r\n    if (!loggedIn) {\r\n      navigate(\"/auth\");\r\n      document.documentElement.scrollTop = 0;\r\n      return;\r\n    }\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(\"https://easylearn-mhgq.onrender.com/vote\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        subtopicId: props.subtopicId,\r\n        answerId: props.ans._id,\r\n        questionId: props.questionId,\r\n        upvote: false,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.message === \"vote done\") {\r\n          setup(data.upvotes);\r\n          setdown(data.downvotes);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <p className={classes.answer}>\r\n      <p className={classes.author}>\r\n        {props.ans.userId !== null ? props.ans.userId.username : \"Anonymous\"}\r\n      </p>\r\n      {props.ans.answer}\r\n      <span className={classes.dislike} onClick={dislike}>\r\n        <ion-icon name=\"thumbs-down\"></ion-icon>\r\n        {down}\r\n      </span>\r\n      <span className={classes.like} onClick={like}>\r\n        {up}\r\n        <ion-icon name=\"thumbs-up\"></ion-icon>\r\n      </span>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n",{"ruleId":"265","severity":1,"message":"266","line":24,"column":11,"nodeType":"267","messageId":"268","endLine":24,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":9,"column":7,"nodeType":"271","endLine":9,"endColumn":53},{"ruleId":"265","severity":1,"message":"272","line":11,"column":9,"nodeType":"267","messageId":"268","endLine":11,"endColumn":14},{"ruleId":"265","severity":1,"message":"273","line":23,"column":10,"nodeType":"267","messageId":"268","endLine":23,"endColumn":25},{"ruleId":"265","severity":1,"message":"274","line":77,"column":9,"nodeType":"267","messageId":"268","endLine":77,"endColumn":21},{"ruleId":"265","severity":1,"message":"275","line":89,"column":9,"nodeType":"267","messageId":"268","endLine":89,"endColumn":22},{"ruleId":"265","severity":1,"message":"276","line":11,"column":10,"nodeType":"267","messageId":"268","endLine":11,"endColumn":17},{"ruleId":"265","severity":1,"message":"277","line":11,"column":19,"nodeType":"267","messageId":"268","endLine":11,"endColumn":29},{"ruleId":"265","severity":1,"message":"278","line":19,"column":10,"nodeType":"267","messageId":"268","endLine":19,"endColumn":22},{"ruleId":"265","severity":1,"message":"279","line":19,"column":24,"nodeType":"267","messageId":"268","endLine":19,"endColumn":39},{"ruleId":"265","severity":1,"message":"280","line":77,"column":13,"nodeType":"267","messageId":"268","endLine":77,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":41,"column":16,"nodeType":"283","messageId":"284","endLine":41,"endColumn":17,"suggestions":"285","suppressions":"286"},{"ruleId":"281","severity":1,"message":"287","line":46,"column":50,"nodeType":"283","messageId":"284","endLine":46,"endColumn":51,"suggestions":"288","suppressions":"289"},{"ruleId":"281","severity":1,"message":"287","line":46,"column":93,"nodeType":"283","messageId":"284","endLine":46,"endColumn":94,"suggestions":"290","suppressions":"291"},{"ruleId":"265","severity":1,"message":"292","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":14},{"ruleId":"265","severity":1,"message":"293","line":5,"column":23,"nodeType":"267","messageId":"268","endLine":5,"endColumn":34},{"ruleId":"265","severity":1,"message":"294","line":11,"column":10,"nodeType":"267","messageId":"268","endLine":11,"endColumn":12},{"ruleId":"265","severity":1,"message":"295","line":11,"column":14,"nodeType":"267","messageId":"268","endLine":11,"endColumn":19},{"ruleId":"265","severity":1,"message":"296","line":12,"column":10,"nodeType":"267","messageId":"268","endLine":12,"endColumn":14},{"ruleId":"265","severity":1,"message":"297","line":12,"column":16,"nodeType":"267","messageId":"268","endLine":12,"endColumn":23},{"ruleId":"265","severity":1,"message":"298","line":26,"column":11,"nodeType":"267","messageId":"268","endLine":26,"endColumn":12},{"ruleId":"299","severity":1,"message":"300","line":41,"column":6,"nodeType":"301","endLine":41,"endColumn":8,"suggestions":"302"},{"ruleId":"265","severity":1,"message":"293","line":4,"column":23,"nodeType":"267","messageId":"268","endLine":4,"endColumn":34},{"ruleId":"299","severity":1,"message":"300","line":37,"column":6,"nodeType":"301","endLine":37,"endColumn":8,"suggestions":"303"},{"ruleId":"265","severity":1,"message":"304","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":19},{"ruleId":"265","severity":1,"message":"305","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":18},{"ruleId":"265","severity":1,"message":"306","line":8,"column":18,"nodeType":"267","messageId":"268","endLine":8,"endColumn":27},{"ruleId":"265","severity":1,"message":"307","line":13,"column":12,"nodeType":"267","messageId":"268","endLine":13,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":14,"column":22,"nodeType":"310","messageId":"311","endLine":14,"endColumn":24},{"ruleId":"299","severity":1,"message":"312","line":33,"column":6,"nodeType":"301","endLine":33,"endColumn":8,"suggestions":"313"},{"ruleId":"265","severity":1,"message":"304","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":19},{"ruleId":"265","severity":1,"message":"314","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":19},{"ruleId":"265","severity":1,"message":"315","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"293","line":11,"column":23,"nodeType":"267","messageId":"268","endLine":11,"endColumn":34},{"ruleId":"265","severity":1,"message":"306","line":16,"column":18,"nodeType":"267","messageId":"268","endLine":16,"endColumn":27},{"ruleId":"299","severity":1,"message":"312","line":60,"column":6,"nodeType":"301","endLine":60,"endColumn":15,"suggestions":"316"},{"ruleId":"265","severity":1,"message":"317","line":61,"column":9,"nodeType":"267","messageId":"268","endLine":61,"endColumn":30},{"ruleId":"299","severity":1,"message":"318","line":79,"column":6,"nodeType":"301","endLine":79,"endColumn":17,"suggestions":"319"},{"ruleId":"299","severity":1,"message":"320","line":177,"column":6,"nodeType":"301","endLine":177,"endColumn":12,"suggestions":"321"},{"ruleId":"265","severity":1,"message":"293","line":4,"column":23,"nodeType":"267","messageId":"268","endLine":4,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":25,"column":11,"nodeType":"267","messageId":"268","endLine":25,"endColumn":15},{"ruleId":"265","severity":1,"message":"322","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":21},{"ruleId":"265","severity":1,"message":"323","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":21},{"ruleId":"265","severity":1,"message":"324","line":7,"column":8,"nodeType":"267","messageId":"268","endLine":7,"endColumn":13},{"ruleId":"265","severity":1,"message":"325","line":12,"column":9,"nodeType":"267","messageId":"268","endLine":12,"endColumn":17},{"ruleId":"265","severity":1,"message":"326","line":13,"column":10,"nodeType":"267","messageId":"268","endLine":13,"endColumn":19},{"ruleId":"265","severity":1,"message":"327","line":13,"column":21,"nodeType":"267","messageId":"268","endLine":13,"endColumn":33},{"ruleId":"265","severity":1,"message":"328","line":14,"column":9,"nodeType":"267","messageId":"268","endLine":14,"endColumn":17},{"ruleId":"299","severity":1,"message":"329","line":38,"column":6,"nodeType":"301","endLine":38,"endColumn":8,"suggestions":"330"},{"ruleId":"265","severity":1,"message":"331","line":1,"column":10,"nodeType":"267","messageId":"268","endLine":1,"endColumn":19},{"ruleId":"265","severity":1,"message":"332","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":14},{"ruleId":"265","severity":1,"message":"323","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":21},{"ruleId":"265","severity":1,"message":"325","line":9,"column":9,"nodeType":"267","messageId":"268","endLine":9,"endColumn":17},{"ruleId":"265","severity":1,"message":"326","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":19},{"ruleId":"265","severity":1,"message":"328","line":11,"column":9,"nodeType":"267","messageId":"268","endLine":11,"endColumn":17},{"ruleId":"265","severity":1,"message":"333","line":13,"column":9,"nodeType":"267","messageId":"268","endLine":13,"endColumn":21},{"ruleId":"265","severity":1,"message":"278","line":26,"column":10,"nodeType":"267","messageId":"268","endLine":26,"endColumn":22},{"ruleId":"265","severity":1,"message":"276","line":27,"column":10,"nodeType":"267","messageId":"268","endLine":27,"endColumn":17},{"ruleId":"265","severity":1,"message":"334","line":28,"column":9,"nodeType":"267","messageId":"268","endLine":28,"endColumn":31},{"ruleId":"265","severity":1,"message":"266","line":40,"column":11,"nodeType":"267","messageId":"268","endLine":40,"endColumn":15},{"ruleId":"265","severity":1,"message":"293","line":3,"column":23,"nodeType":"267","messageId":"268","endLine":3,"endColumn":34},"no-unused-vars","'url2' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'roles' is assigned a value but never used.","'alternateOption' is assigned a value but never used.","'onFormToggle' is assigned a value but never used.","'onSubmitEmail' is assigned a value but never used.","'address' is assigned a value but never used.","'setaddress' is assigned a value but never used.","'addressValid' is assigned a value but never used.","'setaddressValid' is assigned a value but never used.","'flag' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["335","336"],["337"],"Unnecessary escape character: \\+.",["338","339"],["340"],["341","342"],["343"],"'Answer' is defined but never used.","'useDispatch' is defined but never used.","'up' is assigned a value but never used.","'setup' is assigned a value but never used.","'down' is assigned a value but never used.","'setdown' is assigned a value but never used.","'u' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loggedIn' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["344"],["345"],"'useParams' is defined but never used.","'TechData' is defined but never used.","'setfilter' is assigned a value but never used.","'checktitle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.",["346"],"'TopicData' is defined but never used.","'TopicQA' is defined but never used.",["347"],"'showanswerformHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'subtopicId'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has a missing dependency: 'videos'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setcurrvideo' needs the current value of 'videos'.",["349"],"'authActions' is defined but never used.","'useSelector' is defined but never used.","'Modal' is defined but never used.","'dispatch' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setshowModal' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showform'. Either include it or remove the dependency array.",["350"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'confirmation' is assigned a value but never used.","'onAddressChangeHandler' is assigned a value but never used.",{"messageId":"351","fix":"352","desc":"353"},{"messageId":"354","fix":"355","desc":"356"},{"kind":"357","justification":"358"},{"messageId":"351","fix":"359","desc":"353"},{"messageId":"354","fix":"360","desc":"356"},{"kind":"357","justification":"358"},{"messageId":"351","fix":"361","desc":"353"},{"messageId":"354","fix":"362","desc":"356"},{"kind":"357","justification":"358"},{"desc":"363","fix":"364"},{"desc":"363","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"removeEscape",{"range":"376","text":"358"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"377","text":"378"},"Replace the `\\` with `\\\\` to include the actual backslash character.","directive","",{"range":"379","text":"358"},{"range":"380","text":"378"},{"range":"381","text":"358"},{"range":"382","text":"378"},"Update the dependencies array to be: [loggedIn, navigate]",{"range":"383","text":"384"},{"range":"385","text":"384"},"Update the dependencies array to be: [filter]",{"range":"386","text":"387"},"Update the dependencies array to be: [filter, loading]",{"range":"388","text":"389"},"Update the dependencies array to be: [questions, subtopicId]",{"range":"390","text":"391"},"Update the dependencies array to be: [page, videos]",{"range":"392","text":"393"},"Update the dependencies array to be: [showform]",{"range":"394","text":"395"},[1125,1126],[1125,1125],"\\",[1300,1301],[1300,1300],[1343,1344],[1343,1343],[1326,1328],"[loggedIn, navigate]",[1160,1162],[973,975],"[filter]",[2391,2400],"[filter, loading]",[2875,2886],"[questions, subtopicId]",[5469,5475],"[page, videos]",[1278,1280],"[showform]"]